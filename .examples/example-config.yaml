name: My oscar report
datasets:
  oscars:
    path: ".examples/data/oscars.csv"
    offer-excel: true
    links:
      link to oscar plot:
        column: age
        view: oscar-plot
      link to movie:
        column: movie
        table-row: movies/Title
  movies:
    path: ".examples/data/movies.csv"
    offer-excel: true
    links:
      link to oscar entry:
        column: Title
        table-row: oscars/movie
default-view: oscars
webview-controls: true
views:
  oscars:
    dataset: oscars
    desc: |
      ### All winning oscars beginning in the year 1929.
      This table contains *all* winning oscars for best actress and best actor.
    page-size: 25
    render-table:
      add-columns:
        birth_season:
          value: |
            function getSeasonEmoji(row) {
                var month = row.birth_mo;
                const seasons = ["‚ùÑÔ∏è", "üå∏", "‚òÄÔ∏è", "üçÅ"];
                return (month < 1 || month > 12) ? "Invalid month" : seasons[Math.floor((month % 12) / 3)];
            }
      columns:
        index(0):
          display-mode: hidden
        regex('birth_.+'):
          display-mode: detail
        oscar_yr:
          label: year
        age:
          plot:
            ticks:
              scale: linear
              domain:
                - 20
                - 100
        name:
          link-to-url:
            lmgtfy:
              url: "https://www.google.com/search?q={name}"
        movie:
          link-to-url:
            Wikipedia:
              url: "https://en.wikipedia.org/wiki/{value}"
        award:
          plot:
            heatmap:
              scale: ordinal
              domain:
                - Best actor
                - Best actress
              range:
                - "#add8e6"
                - "#ffb6c1"
        overall_wins_and_overall_nominations:
          display-mode: detail
          label: overall wins and nominations
          custom-plot:
            data: |
              function(value, row) {
                return [{"category": "wins", "amount": value.split("/")[0]}, {"category": "nominations", "amount": value.split("/")[1]}]
              }
            spec-path: ".examples/specs/overall-wins-and-overall-nominations.vl.json"
  oscar-plot:
    dataset: oscars
    desc: |
      ## My beautiful oscar scatter plot
      *So many great actors and actresses*
    render-plot:
      spec-path: ".examples/specs/oscars.vl.json"
  movies:
    dataset: movies
    render-table:
      columns:
        Genre:
          ellipsis: 15
        imdbID:
          link-to-url:
            IMDB:
              url: "https://www.imdb.com/title/{value}/"
        Title:
          link-to-url:
            Wikipedia:
              url: "https://en.wikipedia.org/wiki/{value}"
            Letterboxd:
              url: "https://letterboxd.com/search/{value}"
              new-window: false
        imdbRating:
          precision: 1
          plot:
            bars:
              scale: linear
              domain:
                - 1
                - 10
              color:
                scale: linear
                range:
                  - red
                  - green
        Rated:
          plot-view-legend: true
          plot:
            heatmap:
              scale: ordinal
              color-scheme: tableau20
        Runtime:
          custom-path: ".examples/specs/time-formatter.js"
        timerun:
          optional: true
          custom-path: ".examples/specs/time-formatter.js"
  movies-plot:
    dataset: movies
    desc: |
      All movies with its *runtime* and *ratings* plotted over *time*.
    render-plot:
      spec-path: ".examples/specs/movies.vl.json"
